{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-4a2131cd35f69b7e.js","src/actors/Actor.ts","src/actors/Bomb.ts","src/actors/FPSViewer.ts","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@parcel/runtime-js/lib/runtime-54bfbcb31a49578e.js","src/actors/Hero.ts","src/actors/Map.ts","src/main.ts"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"cH4XI\\\":\\\"index.16c5edbb.js\\\",\\\"1GBab\\\":\\\"Hero.9543b0cd.png\\\"}\"));","import { Point } from \"../types/Point\";\n\nexport interface IActor {\n  position: Point;\n  update: (delta: number) => void;\n  initialize?: () => void;\n  keyboard_event_down?: (key: string) => void;\n  keyboard_event_up?: (key: string) => void;\n  draw: (delta: number, ctx: CanvasRenderingContext2D) => void;\n}\n\nexport class Actor implements IActor {\n  position: Point;\n  constructor(position: Point) {\n    this.position = position;\n  }\n  update(delta: number) {}\n  draw(delta: number, ctx: CanvasRenderingContext2D) {}\n  keyboard_event(key: string) {}\n}\n","import { Point } from \"../types/Point\";\nimport { Actor, IActor } from \"./Actor\";\n\nexport class Bomb extends Actor implements IActor {\n  bombSize: number;\n  constructor(initialPos: Point = { x: 300, y: 300 }) {\n    super(initialPos);\n    this.bombSize = 25;\n  }\n\n  update(delta: number) {}\n}\n\n","import { Actor } from \"./Actor\";\n\nexport class FPSViewer extends Actor {\n  update() {}\n  keyboard_event() {}\n  draw(delta: number, ctx: CanvasRenderingContext2D) {\n    const fps = (1 / delta).toFixed(2);\n    ctx.font = \"25px Arial\";\n    ctx.fillStyle = \"white\";\n    ctx.fillText(`FPS:${fps}`, this.position.x, this.position.y);\n  }\n}\n","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","module.exports = require('./helpers/bundle-url').getBundleURL('cH4XI') + require('./helpers/bundle-manifest').resolve(\"1GBab\");","import { Size } from \"../types/Size\";\nimport { Point } from \"../types/Point\";\nimport { checkLimits } from \"../utils/checkLimits\";\nimport { Actor, IActor } from \"./Actor\";\n\nconst Sprite = require(\"../../public/img/characters/Hero.png\");\n\nexport class Hero extends Actor implements IActor {\n  sprite: HTMLImageElement;\n  size: Size;\n  speed: number;\n  blocks: Array<any>;\n  constructor(size: Size, initialPos: Point, blocks: any) {\n    super(initialPos);\n    this.size = size;\n    this.speed = 12;\n    this.blocks = blocks;\n    this.sprite = new Image();\n    this.sprite.src = Sprite;\n  }\n\n  collisionControler(position: Point) {\n    for (let i = 0; i < this.blocks.length; i++) {\n      let block = this.blocks[i];\n      if (\n        position.x > block.x + block.w ||\n        position.x + this.size.w < block.x ||\n        position.y > block.y + block.h ||\n        position.y + this.size.h < block.y\n      ) {\n      } else return true;\n    }\n  }\n\n  update(delta: number) {\n  }\n\n  draw(delta: number, ctx: CanvasRenderingContext2D) {\n    ctx.drawImage(\n      this.sprite,\n      15,\n      140,\n      35,\n      55,\n      this.position.x,\n      this.position.y,\n      40,\n      50\n    );\n  }\n\n  keyboard_event_down(key: string) {\n    if (key == \"ArrowRight\") {\n      let position = { ...this.position };\n      position.x += this.speed;\n      if (!this.collisionControler(position)) {\n        this.position.x += this.speed;\n      }\n    }\n\n    if (key == \"ArrowUp\") {\n      let position = { ...this.position };\n      position.y -= this.speed;\n      if (!this.collisionControler(position)) {\n        this.position.y -= this.speed;\n      }\n    }\n\n    if (key == \"ArrowLeft\") {\n      let position = { ...this.position };\n      position.x -= this.speed;\n      if (!this.collisionControler(position)) {\n        this.position.x -= this.speed;\n      }\n    }\n\n    if (key == \"ArrowDown\") {\n      let position = { ...this.position };\n      position.y += this.speed;\n      if (!this.collisionControler(position)) {\n        this.position.y += this.speed;\n      }\n    }\n  }\n}\n","import { Actor, IActor } from \"./Actor\";\n\nconst level = [\n  \"WWWWWWWWWWWWWWWWWWWWWWWW\",\n  \"W   WWVWWWW  V         W\",\n  \"W   V     W  WWWWWWWVWWW\",\n  \"WVWWWWWVWWW  W         W\",\n  \"W W     WWWWVWWVWWWWWVWW\",\n  \"W W     V       W      W\",\n  \"W WWWWWWWWWVWWWWW      W\",\n  \"W    V          WWWWWWVW\",\n  \"WVWWWWWWWWWVWWWVWWVWWPPW\",\n  \"W    V      WWW      PFW\",\n  \"WWWWWWWWWWWWWWWWWWWWWWWW\",\n].map((f) => f.split(\"\"));\n\nexport class Map extends Actor implements IActor {\n  unitaryHeight = 550 / level.length;\n  unitaryWidth = 1200 / level[0].length;\n  blocks: Array<any> = [];\n  constructor() {\n    super({ x: 0, y: 0 });\n    this.blockGenerator();\n  }\n  blockGenerator() {\n    for (let x = 0; x < level.length; x++) {\n      for (let y = 0; y < level[x].length; y++) {\n        if (level[x][y] == \"W\") {\n          this.blocks.push({\n            x: y * this.unitaryHeight,\n            y: x * this.unitaryWidth,\n            w: this.unitaryHeight,\n            h: this.unitaryWidth,\n          });\n        }\n      }\n    }\n  }\n  update() {}\n  keyboard_event() {}\n  draw(delta: number, ctx: CanvasRenderingContext2D) {\n    ctx.save();\n    ctx.translate(0, 0);\n    for (let x = 0; x < level.length; x++) {\n      for (let y = 0; y < level[x].length; y++) {\n        ctx.beginPath();\n\n        if (level[x][y] == \"W\") {\n          ctx.fillStyle = \"green\";\n          ctx.rect(\n            y * this.unitaryHeight,\n            x * this.unitaryWidth,\n            this.unitaryHeight,\n            this.unitaryWidth\n          );\n        }\n\n        if (level[x][y] == \"V\") {\n          ctx.fillStyle = \"white\";\n          ctx.rect(\n            y * this.unitaryHeight,\n            x * this.unitaryWidth,\n            this.unitaryHeight,\n            this.unitaryWidth\n          );\n        }\n\n        if (level[x][y] == \"F\") {\n          ctx.fillStyle = \"purple\";\n          ctx.rect(\n            y * this.unitaryHeight,\n            x * this.unitaryWidth,\n            this.unitaryHeight,\n            this.unitaryWidth\n          );\n        }\n        if (level[x][y] == \"P\") {\n          ctx.fillStyle = \"orange\";\n          ctx.rect(\n            y * this.unitaryHeight,\n            x * this.unitaryWidth,\n            this.unitaryHeight,\n            this.unitaryWidth\n          );\n        }\n\n        ctx.closePath();\n        ctx.fill();\n        ctx.stroke();\n      }\n    }\n    ctx.restore();\n  }\n}\n","import { Actor, IActor } from \"./actors/Actor\";\nimport { Bomb } from \"./actors/Bomb\";\nimport { FPSViewer } from \"./actors/FPSViewer\";\nimport { Hero } from \"./actors/Hero\";\nimport { Map } from \"./actors/Map\";\n\nwindow.onload = () => {\n  var canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\n  var ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n\n  let maze = new Map();\n  let actor = new Hero({ w: 25, h: 25 }, { x: 70, y: 70 }, maze.blocks);\n  let fps = new FPSViewer({ x: 10, y: 25 });\n  let bomb = new Bomb();\n\n  let actors: Array<IActor> = [maze, actor, fps, bomb];\n\n  let lastFrame = 0;\n  const render = (time: number) => {\n    let delta = (time - lastFrame) / 1000;\n\n    lastFrame = time;\n    actors.forEach((e) => e.update(delta));\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    actors.forEach((e) => {\n      e.draw(delta, ctx);\n    });\n    window.requestAnimationFrame(render);\n  };\n\n  window.requestAnimationFrame(render);\n\n  document.body.addEventListener(\"keydown\", (e) => {\n    actors.forEach((actor) => {\n      if (actor.keyboard_event_down) {\n        actor.keyboard_event_down(e.key);\n      }\n    });\n  });\n  document.body.addEventListener(\"keyup\", (e) => {\n    actors.forEach((actor) => {\n      if (actor.keyboard_event_up) {\n        actor.keyboard_event_up(e.key);\n      }\n    });\n  });\n};\n"],"names":["$8b4d1930797b255e$export$6503ec6e8aabbaf","$8b4d1930797b255e$export$f7ad0328861e2f03","$8b4d1930797b255e$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$8235678231353d24$export$f73d3eb6fd876d80","position","this","update","delta","draw","delta1","ctx","keyboard_event","key","$4350759be67b1382$export$3a0f78411bc2215d","initialPos","x","y","super","bombSize","$37691bb6273e74a0$export$13acb86b4b3ca30e","fps","toFixed","font","fillStyle","fillText","$f29cd6c67ea13581$export$bdfd709ae4826697","$f29cd6c67ea13581$var$bundleURL","$f29cd6c67ea13581$var$getBaseURL","url","replace","value","err","matches","stack","match","$f29cd6c67ea13581$var$getBundleURL","$86afab9a2b36d225$exports","getBundleURL","resolve","$44dc7b8b371e1fd2$export$887967f05dc521ae","size","blocks","speed","sprite","Image","src","collisionControler","block","w","h","drawImage","keyboard_event_down","$dec99b94dedca321$var$level","map","f","split","$dec99b94dedca321$export$a5c7b93649eaf8f8","unitaryHeight","unitaryWidth","blockGenerator","push","save","translate","beginPath","rect","closePath","fill","stroke","restore","window","onload","canvas","document","getElementById","getContext","maze","actors","lastFrame","render","time","forEach","e","clearRect","width","height","requestAnimationFrame","body","addEventListener","actor","keyboard_event_up"],"version":3,"file":"index.16c5edbb.js.map"}